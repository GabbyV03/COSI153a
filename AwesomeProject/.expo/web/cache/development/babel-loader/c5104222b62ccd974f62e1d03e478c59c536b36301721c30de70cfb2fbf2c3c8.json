{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"item\", \"index\", \"onLayout\", \"children\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useEffect, useMemo, useRef } from \"react\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated, { runOnUI, useAnimatedStyle, useSharedValue } from \"react-native-reanimated\";\nimport { useDraggableFlatListContext } from \"../context/draggableFlatListContext\";\nimport { isWeb } from \"../constants\";\nimport { useCellTranslate } from \"../hooks/useCellTranslate\";\nimport { typedMemo } from \"../utils\";\nimport { useRefs } from \"../context/refContext\";\nimport { useAnimatedValues } from \"../context/animatedValueContext\";\nimport CellProvider from \"../context/cellContext\";\nimport { useStableCallback } from \"../hooks/useStableCallback\";\nfunction CellRendererComponent(props) {\n  var item = props.item,\n    index = props.index,\n    onLayout = props.onLayout,\n    children = props.children,\n    rest = _objectWithoutProperties(props, _excluded);\n  var viewRef = useRef(null);\n  var _useRefs = useRefs(),\n    cellDataRef = _useRefs.cellDataRef,\n    propsRef = _useRefs.propsRef,\n    containerRef = _useRefs.containerRef;\n  var _useAnimatedValues = useAnimatedValues(),\n    horizontalAnim = _useAnimatedValues.horizontalAnim,\n    scrollOffset = _useAnimatedValues.scrollOffset;\n  var _useDraggableFlatList = useDraggableFlatListContext(),\n    activeKey = _useDraggableFlatList.activeKey,\n    keyExtractor = _useDraggableFlatList.keyExtractor,\n    horizontal = _useDraggableFlatList.horizontal,\n    layoutAnimationDisabled = _useDraggableFlatList.layoutAnimationDisabled;\n  var key = keyExtractor(item, index);\n  var offset = useSharedValue(-1);\n  var size = useSharedValue(-1);\n  var heldTanslate = useSharedValue(0);\n  var translate = useCellTranslate({\n    cellOffset: offset,\n    cellSize: size,\n    cellIndex: index\n  });\n  var isActive = activeKey === key;\n  var animStyle = useAnimatedStyle(function () {\n    if (translate.value && !isWeb) {\n      heldTanslate.value = translate.value;\n    }\n    var t = activeKey ? translate.value : heldTanslate.value;\n    return {\n      transform: [horizontalAnim.value ? {\n        translateX: t\n      } : {\n        translateY: t\n      }]\n    };\n  }, [translate, activeKey]);\n  var updateCellMeasurements = useStableCallback(function () {\n    var onSuccess = function onSuccess(x, y, w, h) {\n      if (isWeb && horizontal) x += scrollOffset.value;\n      var cellOffset = horizontal ? x : y;\n      var cellSize = horizontal ? w : h;\n      cellDataRef.current.set(key, {\n        measurements: {\n          size: cellSize,\n          offset: cellOffset\n        }\n      });\n      size.value = cellSize;\n      offset.value = cellOffset;\n    };\n    var onFail = function onFail() {\n      var _propsRef$current;\n      if ((_propsRef$current = propsRef.current) !== null && _propsRef$current !== void 0 && _propsRef$current.debug) {\n        console.log(\"## on measure fail, index: \" + index);\n      }\n    };\n    var containerNode = containerRef.current;\n    var viewNode = viewRef.current;\n    var nodeHandle = containerNode;\n    if (viewNode && nodeHandle) {\n      viewNode.measureLayout(nodeHandle, onSuccess, onFail);\n    }\n  });\n  var onCellLayout = useStableCallback(function (e) {\n    heldTanslate.value = 0;\n    updateCellMeasurements();\n    if (onLayout && e) onLayout(e);\n  });\n  useEffect(function () {\n    if (isWeb) {\n      requestAnimationFrame(function () {\n        onCellLayout();\n      });\n    }\n  }, [index, onCellLayout]);\n  var baseStyle = useMemo(function () {\n    return {\n      elevation: isActive ? 1 : 0,\n      zIndex: isActive ? 999 : 0,\n      flexDirection: horizontal ? \"row\" : \"column\"\n    };\n  }, [isActive, horizontal]);\n  var _propsRef$current2 = propsRef.current,\n    itemEnteringAnimation = _propsRef$current2.itemEnteringAnimation,\n    itemExitingAnimation = _propsRef$current2.itemExitingAnimation,\n    itemLayoutAnimation = _propsRef$current2.itemLayoutAnimation;\n  useEffect(function () {\n    if (!propsRef.current.enableLayoutAnimationExperimental) return;\n    var tag = findNodeHandle(viewRef.current);\n    runOnUI(function (t, _layoutDisabled) {\n      \"worklet\";\n\n      if (!t) return;\n      var config = global.LayoutAnimationRepository.configs[t];\n      if (config) stashConfig(t, config);\n      var stashedConfig = getStashedConfig(t);\n      if (_layoutDisabled) {\n        global.LayoutAnimationRepository.removeConfig(t);\n      } else if (stashedConfig) {\n        global.LayoutAnimationRepository.registerConfig(t, stashedConfig);\n      }\n    })(tag, layoutAnimationDisabled);\n  }, [layoutAnimationDisabled]);\n  return React.createElement(Animated.View, _extends({}, rest, {\n    ref: viewRef,\n    onLayout: onCellLayout,\n    entering: itemEnteringAnimation,\n    exiting: itemExitingAnimation,\n    layout: propsRef.current.enableLayoutAnimationExperimental ? itemLayoutAnimation : undefined,\n    style: [props.style, baseStyle, activeKey ? animStyle : styles.zeroTranslate],\n    pointerEvents: activeKey ? \"none\" : \"auto\"\n  }), React.createElement(CellProvider, {\n    isActive: isActive\n  }, children));\n}\nexport default typedMemo(CellRendererComponent);\nvar styles = StyleSheet.create({\n  zeroTranslate: {\n    transform: [{\n      translateX: 0\n    }, {\n      translateY: 0\n    }]\n  }\n});\nrunOnUI(function () {\n  \"worklet\";\n\n  global.RNDFLLayoutAnimationConfigStash = {};\n})();\nfunction stashConfig(tag, config) {\n  \"worklet\";\n\n  if (!global.RNDFLLayoutAnimationConfigStash) global.RNDFLLayoutAnimationConfigStash = {};\n  global.RNDFLLayoutAnimationConfigStash[tag] = config;\n}\nfunction getStashedConfig(tag) {\n  \"worklet\";\n\n  if (!global.RNDFLLayoutAnimationConfigStash) return null;\n  return global.RNDFLLayoutAnimationConfigStash[tag];\n}","map":{"version":3,"names":["React","useEffect","useMemo","useRef","findNodeHandle","StyleSheet","Animated","runOnUI","useAnimatedStyle","useSharedValue","useDraggableFlatListContext","isWeb","useCellTranslate","typedMemo","useRefs","useAnimatedValues","CellProvider","useStableCallback","CellRendererComponent","props","item","index","onLayout","children","rest","_objectWithoutProperties","_excluded","viewRef","_useRefs","cellDataRef","propsRef","containerRef","_useAnimatedValues","horizontalAnim","scrollOffset","_useDraggableFlatList","activeKey","keyExtractor","horizontal","layoutAnimationDisabled","key","offset","size","heldTanslate","translate","cellOffset","cellSize","cellIndex","isActive","animStyle","value","t","transform","translateX","translateY","updateCellMeasurements","onSuccess","x","y","w","h","current","set","measurements","onFail","_propsRef$current","debug","console","log","containerNode","viewNode","nodeHandle","measureLayout","onCellLayout","e","requestAnimationFrame","baseStyle","elevation","zIndex","flexDirection","_propsRef$current2","itemEnteringAnimation","itemExitingAnimation","itemLayoutAnimation","enableLayoutAnimationExperimental","tag","_layoutDisabled","config","global","LayoutAnimationRepository","configs","stashConfig","stashedConfig","getStashedConfig","removeConfig","registerConfig","createElement","View","_extends","ref","entering","exiting","layout","undefined","style","styles","zeroTranslate","pointerEvents","create","RNDFLLayoutAnimationConfigStash"],"sources":["/Users/gabriellavukomanovic/Desktop/Summer2023/AwesomeProject/node_modules/react-native-draggable-flatlist/lib/module/components/CellRendererComponent.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef } from \"react\";\nimport {\n  findNodeHandle,\n  LayoutChangeEvent,\n  MeasureLayoutOnSuccessCallback,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n} from \"react-native\";\nimport Animated, {\n  runOnUI,\n  useAnimatedStyle,\n  useSharedValue,\n} from \"react-native-reanimated\";\nimport { useDraggableFlatListContext } from \"../context/draggableFlatListContext\";\nimport { isWeb } from \"../constants\";\nimport { useCellTranslate } from \"../hooks/useCellTranslate\";\nimport { typedMemo } from \"../utils\";\nimport { useRefs } from \"../context/refContext\";\nimport { useAnimatedValues } from \"../context/animatedValueContext\";\nimport CellProvider from \"../context/cellContext\";\nimport { useStableCallback } from \"../hooks/useStableCallback\";\n\ntype Props<T> = {\n  item: T;\n  index: number;\n  children: React.ReactNode;\n  onLayout?: (e: LayoutChangeEvent) => void;\n  style?: StyleProp<ViewStyle>;\n};\n\nfunction CellRendererComponent<T>(props: Props<T>) {\n  const { item, index, onLayout, children, ...rest } = props;\n\n  const viewRef = useRef<Animated.View>(null);\n  const { cellDataRef, propsRef, containerRef } = useRefs<T>();\n\n  const { horizontalAnim, scrollOffset } = useAnimatedValues();\n  const {\n    activeKey,\n    keyExtractor,\n    horizontal,\n    layoutAnimationDisabled,\n  } = useDraggableFlatListContext<T>();\n\n  const key = keyExtractor(item, index);\n  const offset = useSharedValue(-1);\n  const size = useSharedValue(-1);\n  const heldTanslate = useSharedValue(0);\n\n  const translate = useCellTranslate({\n    cellOffset: offset,\n    cellSize: size,\n    cellIndex: index,\n  });\n\n  const isActive = activeKey === key;\n\n  const animStyle = useAnimatedStyle(() => {\n    // When activeKey becomes null at the end of a drag and the list reorders,\n    // the animated style may apply before the next paint, causing a flicker.\n    // Solution is to hold over the last animated value until the next onLayout.\n    // (Not required in web)\n    if (translate.value && !isWeb) {\n      heldTanslate.value = translate.value;\n    }\n    const t = activeKey ? translate.value : heldTanslate.value;\n    return {\n      transform: [horizontalAnim.value ? { translateX: t } : { translateY: t }],\n    };\n  }, [translate, activeKey]);\n\n  const updateCellMeasurements = useStableCallback(() => {\n    const onSuccess: MeasureLayoutOnSuccessCallback = (x, y, w, h) => {\n      if (isWeb && horizontal) x += scrollOffset.value;\n      const cellOffset = horizontal ? x : y;\n      const cellSize = horizontal ? w : h;\n      cellDataRef.current.set(key, {\n        measurements: { size: cellSize, offset: cellOffset },\n      });\n\n      size.value = cellSize;\n      offset.value = cellOffset;\n    };\n\n    const onFail = () => {\n      if (propsRef.current?.debug) {\n        console.log(`## on measure fail, index: ${index}`);\n      }\n    };\n\n    const containerNode = containerRef.current;\n    const viewNode = viewRef.current;\n    const nodeHandle = containerNode;\n\n    if (viewNode && nodeHandle) {\n      //@ts-ignore\n      viewNode.measureLayout(nodeHandle, onSuccess, onFail);\n    }\n  });\n\n  const onCellLayout = useStableCallback((e?: LayoutChangeEvent) => {\n    heldTanslate.value = 0;\n    updateCellMeasurements();\n    if (onLayout && e) onLayout(e);\n  });\n\n  useEffect(() => {\n    if (isWeb) {\n      // onLayout isn't called on web when the cell index changes, so we manually re-measure\n      requestAnimationFrame(() => {\n        onCellLayout();\n      });\n    }\n  }, [index, onCellLayout]);\n\n  const baseStyle = useMemo(() => {\n    return {\n      elevation: isActive ? 1 : 0,\n      zIndex: isActive ? 999 : 0,\n      flexDirection: horizontal ? (\"row\" as const) : (\"column\" as const),\n    };\n  }, [isActive, horizontal]);\n\n  const {\n    itemEnteringAnimation,\n    itemExitingAnimation,\n    itemLayoutAnimation,\n  } = propsRef.current;\n\n  useEffect(() => {\n    // NOTE: Keep an eye on reanimated LayoutAnimation refactor:\n    // https://github.com/software-mansion/react-native-reanimated/pull/3332/files\n    // We might have to change the way we register/unregister LayouAnimations:\n    // - get native module: https://github.com/software-mansion/react-native-reanimated/blob/cf59766460d05eb30357913455318d8a95909468/src/reanimated2/NativeReanimated/NativeReanimated.ts#L18\n    // - register layout animation for tag: https://github.com/software-mansion/react-native-reanimated/blob/cf59766460d05eb30357913455318d8a95909468/src/reanimated2/NativeReanimated/NativeReanimated.ts#L99\n    if (!propsRef.current.enableLayoutAnimationExperimental) return;\n    const tag = findNodeHandle(viewRef.current);\n\n    runOnUI((t: number | null, _layoutDisabled) => {\n      \"worklet\";\n      if (!t) return;\n      const config = global.LayoutAnimationRepository.configs[t];\n      if (config) stashConfig(t, config);\n      const stashedConfig = getStashedConfig(t);\n      if (_layoutDisabled) {\n        global.LayoutAnimationRepository.removeConfig(t);\n      } else if (stashedConfig) {\n        global.LayoutAnimationRepository.registerConfig(t, stashedConfig);\n      }\n    })(tag, layoutAnimationDisabled);\n  }, [layoutAnimationDisabled]);\n\n  return (\n    <Animated.View\n      {...rest}\n      ref={viewRef}\n      onLayout={onCellLayout}\n      entering={itemEnteringAnimation}\n      exiting={itemExitingAnimation}\n      layout={\n        propsRef.current.enableLayoutAnimationExperimental\n          ? itemLayoutAnimation\n          : undefined\n      }\n      style={[\n        props.style,\n        baseStyle,\n        activeKey ? animStyle : styles.zeroTranslate,\n      ]}\n      pointerEvents={activeKey ? \"none\" : \"auto\"}\n    >\n      <CellProvider isActive={isActive}>{children}</CellProvider>\n    </Animated.View>\n  );\n}\n\nexport default typedMemo(CellRendererComponent);\n\nconst styles = StyleSheet.create({\n  zeroTranslate: {\n    transform: [{ translateX: 0 }, { translateY: 0 }],\n  },\n});\n\ndeclare global {\n  namespace NodeJS {\n    interface Global {\n      RNDFLLayoutAnimationConfigStash: Record<string, unknown>;\n    }\n  }\n}\n\nrunOnUI(() => {\n  \"worklet\";\n  global.RNDFLLayoutAnimationConfigStash = {};\n})();\n\nfunction stashConfig(tag: number, config: unknown) {\n  \"worklet\";\n  if (!global.RNDFLLayoutAnimationConfigStash)\n    global.RNDFLLayoutAnimationConfigStash = {};\n  global.RNDFLLayoutAnimationConfigStash[tag] = config;\n}\n\nfunction getStashedConfig(tag: number) {\n  \"worklet\";\n  if (!global.RNDFLLayoutAnimationConfigStash) return null;\n  return global.RNDFLLayoutAnimationConfigStash[tag] as Record<string, unknown>;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}