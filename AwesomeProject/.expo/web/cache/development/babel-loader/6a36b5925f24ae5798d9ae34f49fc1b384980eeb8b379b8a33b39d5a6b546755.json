{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useRef } from \"react\";\nimport { useDerivedValue, withSpring } from \"react-native-reanimated\";\nimport { DEFAULT_ANIMATION_CONFIG } from \"../constants\";\nimport { useAnimatedValues } from \"../context/animatedValueContext\";\nimport { useIsActive } from \"../context/cellContext\";\nexport function useOnCellActiveAnimation() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      animationConfig: {}\n    },\n    animationConfig = _ref.animationConfig;\n  var animationConfigRef = useRef(animationConfig);\n  animationConfigRef.current = animationConfig;\n  var isActive = useIsActive();\n  var _useAnimatedValues = useAnimatedValues(),\n    isTouchActiveNative = _useAnimatedValues.isTouchActiveNative;\n  var onActiveAnim = useDerivedValue(function () {\n    var toVal = isActive && isTouchActiveNative.value ? 1 : 0;\n    return withSpring(toVal, _objectSpread(_objectSpread({}, DEFAULT_ANIMATION_CONFIG), animationConfigRef.current));\n  }, [isActive]);\n  return {\n    isActive: isActive,\n    onActiveAnim: onActiveAnim\n  };\n}","map":{"version":3,"names":["useRef","useDerivedValue","withSpring","DEFAULT_ANIMATION_CONFIG","useAnimatedValues","useIsActive","useOnCellActiveAnimation","_ref","arguments","length","undefined","animationConfig","animationConfigRef","current","isActive","_useAnimatedValues","isTouchActiveNative","onActiveAnim","toVal","value","_objectSpread"],"sources":["/Users/gabriellavukomanovic/Desktop/Summer2023/AwesomeProject/node_modules/react-native-draggable-flatlist/lib/module/hooks/useOnCellActiveAnimation.ts"],"sourcesContent":["import { useRef } from \"react\";\nimport Animated, {\n  useDerivedValue,\n  withSpring,\n  WithSpringConfig,\n} from \"react-native-reanimated\";\nimport { DEFAULT_ANIMATION_CONFIG } from \"../constants\";\nimport { useAnimatedValues } from \"../context/animatedValueContext\";\nimport { useIsActive } from \"../context/cellContext\";\n\ntype Params = {\n  animationConfig: Partial<WithSpringConfig>;\n};\n\nexport function useOnCellActiveAnimation(\n  { animationConfig }: Params = { animationConfig: {} }\n) {\n  const animationConfigRef = useRef(animationConfig);\n  animationConfigRef.current = animationConfig;\n\n  const isActive = useIsActive();\n\n  const { isTouchActiveNative } = useAnimatedValues();\n\n  const onActiveAnim = useDerivedValue(() => {\n    const toVal = isActive && isTouchActiveNative.value ? 1 : 0;\n    return withSpring(toVal, {\n      ...DEFAULT_ANIMATION_CONFIG,\n      ...animationConfigRef.current,\n    });\n  }, [isActive]);\n\n  return {\n    isActive,\n    onActiveAnim,\n  };\n}\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SACEC,eADF,EAEEC,UAFF,QAIO,yBAJP;AAKA,SAASC,wBAAT;AACA,SAASC,iBAAT;AACA,SAASC,WAAT;AAMA,OAAO,SAASC,wBAATA,CAAA,EAEL;EAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAD8B;MAAEG,eAAe,EAAE;IAAnB,CAC9B;IADEA,eAAA,GAAAJ,IAAA,CAAAI,eAAA;EAEF,IAAMC,kBAAkB,GAAGZ,MAAM,CAACW,eAAD,CAAjC;EACAC,kBAAkB,CAACC,OAAnB,GAA6BF,eAA7B;EAEA,IAAMG,QAAQ,GAAGT,WAAW,EAA5B;EAEA,IAAAU,kBAAA,GAAgCX,iBAAiB,EAAjD;IAAQY,mBAAA,GAAAD,kBAAA,CAAAC,mBAAA;EAER,IAAMC,YAAY,GAAGhB,eAAe,CAAC,YAAM;IACzC,IAAMiB,KAAK,GAAGJ,QAAQ,IAAIE,mBAAmB,CAACG,KAAhC,GAAwC,CAAxC,GAA4C,CAA1D;IACA,OAAOjB,UAAU,CAACgB,KAAD,EAAAE,aAAA,CAAAA,aAAA,KACZjB,wBADoB,GAEpBS,kBAAkB,CAACC,OAAA,CAFP,CAAjB;EAID,CANmC,EAMjC,CAACC,QAAD,CANiC,CAApC;EAQA,OAAO;IACLA,QADK,EACLA,QADK;IAELG,YAAA,EAAAA;EAFK,CAAP;AAID"},"metadata":{},"sourceType":"module","externalDependencies":[]}